<!DOCTYPE html>
<link rel="apple-touch-icon-precomposed" sizes="152x152" href="http://jet.php5.cz/thebox/favicon/apple-touch-icon-152x152.png" />
<link rel="icon" type="image/png" href="http://jet.php5.cz/thebox/favicon/favicon-196x196.png" sizes="196x196" />
<meta name="application-name" content="&nbsp;" />
<meta name="msapplication-TileColor" content="#FFFFFF" />
<meta name="msapplication-TileImage" content="http://jet.php5.cz/thebox/favicon/mstile-144x144.png" />
<meta name="msapplication-wide310x150logo" content="http://jet.php5.cz/thebox/favicon/mstile-310x150.png" />
<meta name="msapplication-square310x310logo" content="http://jet.php5.cz/thebox/favicon/mstile-310x310.png" />
<html>
<head>
	<link rel="stylesheet" type="text/css" href="http://jet.php5.cz/thebox/css/menu.css">
	<title>The Box - Home</title>
	<script>

		function onLoad() {

			getSensors();
			setInterval(getSensors, 10000);

			var rb = document.getElementsByName('r1');
			for (i = 0; i < rb.length; i++) {
				rb[i].onclick = function () {
					var request = new XMLHttpRequest();
					request.open("POST", "relayCmd", true);
					request.send("1" + "=" + this.value);
					getSensors();
				};
			}

			var rb = document.getElementsByName('r2');
			for (i = 0; i < rb.length; i++) {
				rb[i].onclick = function () {
					var request = new XMLHttpRequest();
					request.open("POST", "relayCmd", true);
					request.send("2" + "=" + this.value);
					getSensors();
				};
			}

			var rb = document.getElementsByName('r3');
			for (i = 0; i < rb.length; i++) {
				rb[i].onclick = function () {
					var request = new XMLHttpRequest();
					request.open("POST", "relayCmd", true);
					request.send("3" + "=" + this.value);
					getSensors();
				};
			}

			var rb = document.getElementsByName('r4');
			for (i = 0; i < rb.length; i++) {
				rb[i].onclick = function () {
					var request = new XMLHttpRequest();
					request.open("POST", "relayCmd", true);
					request.send("4" + "=" + this.value);
					getSensors();
				};
			}

		}

		function getSensors() {
			var request = new XMLHttpRequest();
			request.onreadystatechange = function () {
				if (this.readyState == 4) {
					if (this.status == 200) {
						if (this.responseXML != null) {
							// XML file received - contains analog values, switch values and LED states
							var count;
							// get sensor vals
							var num_an = this.responseXML.getElementsByTagName('sensor').length;
							for (count = 0; count < num_an; count++) {
								document.getElementsByClassName("sensor")[count].innerHTML =
									this.responseXML.getElementsByTagName('sensor')[count].childNodes[0].nodeValue.replace(/\s+/, "");

							}
							//preset radio butons
							var num_an = this.responseXML.getElementsByTagName('relay').length;
							for (count = 0; count < num_an; count++) {
								var mode = this.responseXML.getElementsByTagName('relay')[count].childNodes[0].nodeValue;
								var name = "r" + String(count + 1);
								var elements = document.getElementsByName(name);
								switch (parseInt(mode)) {
									case 1:
										elements[0].checked = true;
										break;
									case 0:
										elements[1].checked = true;
										break;
									case 2:
										elements[2].checked = true;
										break;
									default:
										break;

								}
							}

							//preset relay state labels
							var num_an = this.responseXML.getElementsByTagName('state').length;
							for (count = 0; count < num_an; count++) {
								var state = this.responseXML.getElementsByTagName('state')[count].childNodes[0].nodeValue;
								var id = "s" + String(count + 1);
								var element = document.getElementById(id);
								switch (parseInt(state)) {
									case 1:
										element.style.background = "green";
										break;
									case 0:
										element.style.background = "#c70000";
										break;
									default:
										break;
								}
							}

							//grey out invalid remote values
							var elements = document.getElementsByClassName('remote');
							var valid = this.responseXML.getElementsByTagName('valid')[0].childNodes[0].nodeValue;
							for (count = 0; count < elements.length; count++) {
								if (parseInt(valid) == 0) elements[count].style.color = "#888";
								else elements[count].removeAttribute("style");
							}
						}
					}
				}
			}
			request.open("GET", "XMLresponseCmd", true);
			request.send(null);
		}

	</script>
	<style media="screen" type="text/css">
		body {
			margin: 0;
			padding: 0;
			background: #ccc;
		}

		.content {
			display: block;
			font-family: 'Oswald', sans-serif;
			background: white;
			padding: 15px 15px 15px 15px;
			margin: 15px 15px 15px 15px;
			-moz-box-shadow: 0 2px 15px 0 rgba(0,0,0,.2);
			-webkit-box-shadow: 0 2px 15px 0 rgba(0,0,0,.2);
			box-shadow: 0 2px 15px 0 rgba(0,0,0,.2);
		}

		#wrapContent {
			width: 600px;
		}

		table {
			border-collapse: collapse;
			text-align: left;
			width: 100%;
			border: 1px solid #ccc;
		}


			table thead th {
				background: #333;
				color: #FFFFFF;
				padding: 18px;
				text-align: center;
				text-transform: uppercase;
				padding-left: 20px;
				padding-right: 20px;
				font-size: 1.1em;
			}

			table tbody .leftHeader {
				background: #333;
				color: #FFFFFF;
				text-align: right;
				text-transform: uppercase;
			}

			table tbody td {
				padding: 10px 10px;
				text-align: center;
				background: #efefef;
				transition: .3s background-color;
			}

			table thead .subtitle {
				font-weight: normal;
				background-color: #555;
				padding: 8px;
				font-size: 0.75em;
			}

		input[type=radio] {
			margin: 0;
			vertical-align: middle;
			width: 100%;
			height: 2em;
		}

			input[type=radio]:checked {
			}
	</style>

</head>
<body onload="onLoad()">

	<header>
		<div class="nav">
			<ul>
				<li><a class="active" href="index.htm">Home</a></li>
				<li><a href="graphs1.htm">Graphs 1</a></li>
				<li><a href="graphs2.htm">Graphs 2</a></li>
				<li><a href="scheduler.htm">Scheduler</a></li>
				<li><a href="system.htm">System</a></li>
			</ul>
		</div>
	</header>
	<div id="wrapContent">
		<div class="content">
			<table>
				<thead>
					<tr>
						<th rowspan="2">
							Sensors
						</th>
						<th>Main Unit</th>
						<th colspan="2">Remote Unit</th>
					</tr>
					<tr>
						<th class="subtitle">Air</th>
						<th class="subtitle">Air</th>
						<th class="subtitle">Soil</th>
					</tr>
				</thead>
				<tr>
					<td class="leftHeader">Temperature</td>
					<td><span class="sensor"></span>°C</td>
					<td class="remote"><span class="sensor"></span>°C</td>
					<td class="remote"><span class="sensor"></span>°C</td>
				</tr>
				<tr>
					<td class="leftHeader">Humidity</td>
					<td><span class="sensor"></span>%RH</td>
					<td class="remote"><span class="sensor"></span>%RH</td>
					<td class="remote"><span class="sensor"></span>%RH</td>
				</tr>
				<tr>
					<td class="leftHeader">Pressure / Weather</td>
					<td colspan="3"><span class="sensor"></span>hPa&nbsp;/&nbsp;<span class="sensor"></span></td>
				</tr>
				<tr>
					<td class="leftHeader">Light</td>
					<td></td>
					<td colspan="2" class="remote"><span class="sensor"></span>%</td>
				</tr>
				<tr>
					<td class="leftHeader">Rain</td>
					<td>&nbsp;</td>
					<td colspan="2" class="remote"><span class="sensor"></span>mm/h</td>
				</tr>
			</table>
		</div>

		<div class="content">
			<table style="width: 100%;">
				<thead>
					<tr>
						<th rowspan="2">
							Relays
						</th>
						<th>
							Relay 1
						</th>
						<th>
							Relay 2
						</th>
						<th>
							Relay 3
						</th>
						<th>
							Relay 4
						</th>
					</tr>
					<tr>
						<th class="subtitle">Left socket</th>
						<th class="subtitle">Bottom terminal</th>
						<th class="subtitle">Top terminal</th>
						<th class="subtitle">Right socket</th>
					</tr>
				</thead>
				<tr>
					<td class="leftHeader">Status</td>
					<td id="s1">
						&nbsp;
					</td>
					<td id="s2">
						&nbsp;
					</td>
					<td id="s3">
						&nbsp;
					</td>
					<td id="s4">
						&nbsp;
					</td>
				</tr>
				<tr>
					<td class="leftHeader" style="background-color: green">ON</td>
					<td>
						<input type="radio" name="r1" value="1">
					</td>
					<td>
						<input type="radio" name="r2" value="1">
					</td>
					<td>
						<input type="radio" name="r3" value="1">
					</td>
					<td>
						<input type="radio" name="r4" value="1">
					</td>
				</tr>
				<tr>
					<td class="leftHeader" style="background-color: #c70000">OFF</td>
					<td>
						<input type="radio" name="r1" value="0">
					</td>
					<td>
						<input type="radio" name="r2" value="0">
					</td>
					<td>
						<input type="radio" name="r3" value="0">
					</td>
					<td>
						<input type="radio" name="r4" value="0">
					</td>
				</tr>
				<tr>
					<td class="leftHeader" style="background-color: #006097">AUTO</td>
					<td>
						<input type="radio" name="r1" value="2">
					</td>
					<td>
						<input type="radio" name="r2" value="2">
					</td>
					<td>
						<input type="radio" name="r3" value="2">
					</td>
					<td>
						<input type="radio" name="r4" value="2">
					</td>
				</tr>
			</table>
		</div>
	</div>
</body>
</html>
